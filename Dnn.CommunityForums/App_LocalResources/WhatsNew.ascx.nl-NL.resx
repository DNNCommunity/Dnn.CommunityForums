<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="[RESX:AllowURLParams].Text" xml:space="preserve">
    <value>URL Parameters Toestaan</value>
  </data>
  <data name="[RESX:CacheTimeOut].Text" xml:space="preserve">
    <value>Cache Time-Out</value>
  </data>
  <data name="[RESX:EnableRSS].Text" xml:space="preserve">
    <value>RSS Inschakelen</value>
  </data>
  <data name="[RESX:FilterByTag].Text" xml:space="preserve">
    <value>Filter Op Label</value>
  </data>
  <data name="[RESX:HTMLFooter].Text" xml:space="preserve">
    <value>HTML Footer</value>
  </data>
  <data name="[RESX:HTMLHeader].Text" xml:space="preserve">
    <value>HTML Header</value>
  </data>
  <data name="[RESX:HTMLTemplate].Text" xml:space="preserve">
    <value>Sjabloon</value>
  </data>
  <data name="[RESX:IgnoreSecurity].Text" xml:space="preserve">
    <value>Negeer Beveiliging</value>
  </data>
  <data name="[RESX:IncludeBody].Text" xml:space="preserve">
    <value>Inclusief Body</value>
  </data>
  <data name="[RESX:Minutes].Text" xml:space="preserve">
    <value>minuten</value>
  </data>
  <data name="[RESX:NumberOfItems].Text" xml:space="preserve">
    <value>Aantal Berichten</value>
  </data>
  <data name="[RESX:RandomOrder].Text" xml:space="preserve">
    <value>Willekeurige Volgorde</value>
  </data>
  <data name="[RESX:TopicsOnly].Text" xml:space="preserve">
    <value>Alleen Berichten</value>
  </data>
  <data name="[RESX:Update].Text" xml:space="preserve">
    <value>Bijwerken</value>
  </data>
  <data name="[RESX:Token:AuthorDisplayName].Text">
    <value>Toon de weergavenaam van de persoon die het bericht heeft geplaatst.</value>
  </data>
  <data name="[RESX:Token:AuthorFirstName].Text">
    <value>Toont de voornaam van de persoon die het bericht heeft geplaatst.</value>
  </data>
  <data name="[RESX:Token:AuthorId].Text">
    <value>Toont het Id van de gebruiker die het bericht heeft geplaatst.</value>
  </data>
  <data name="[RESX:Token:AuthorLastName].Text">
    <value>Toont de achternaam van de persoon die het bericht heeft geplaatst.</value>
  </data>
  <data name="[RESX:Token:AuthorUserName].Text">
    <value>Toont de gebruikersnaam van de persoon die het bericht heeft geplaatst.</value>
  </data>
  <data name="[RESX:Token:BodyHTML].Text">
    <value>Toon de volledige tekst van het bericht in HTML opmaak.</value>
  </data>
  <data name="[RESX:Token:BodyText].Text">
    <value>Verwijder alle HTML opmaak uit het bericht.</value>
  </data>
  <data name="[RESX:Token:BodyXX].Text">
    <value>Vervang de XX met het aantal platte tekst karakters die u wilt weergeven.</value>
  </data>
  <data name="[RESX:Token:Date].Text">
    <value>Toon de datum waarop het bericht is aangemaakt.</value>
  </data>
  <data name="[RESX:Token:FooterOnly].Text">
    <value>De volgende tokens kunnen in de Footer sectie worden weergegeven.</value>
  </data>
  <data name="[RESX:Token:ForumGroupId].Text">
    <value>Toon het unieke Id van de Forumgroep van het bericht.</value>
  </data>
  <data name="[RESX:Token:ForumGroupName].Text">
    <value>Toon de naam van de Forumgroep van het bericht.</value>
  </data>
  <data name="[RESX:Token:ForumId].Text">
    <value>Toon het unieke id van het forum waarin het bericht is geplaatst.</value>
  </data>
  <data name="[RESX:Token:ForumName].Text">
    <value>Toon het naam van het forum waarin het bericht is geplaatst.</value>
  </data>
  <data name="[RESX:Token:ForumURL].Text">
    <value>Toon het URL voor het forum waarin het bericht is geplaatst.</value>
  </data>
  <data name="[RESX:Token:PostURL].Text">
    <value>Toon het volledige URL voor het bericht.</value>
  </data>
  <data name="[RESX:Token:ReplyCount].Text">
    <value>Toon het aantal antwoorden op het bericht.</value>
  </data>
  <data name="[RESX:Token:ReplyId].Text">
    <value>Toon het antwoord id van het bericht, als het een antwoord is dat wordt weergegeven.</value>
  </data>
  <data name="[RESX:Token:RSSICON].Text">
    <value>Toon het standaard RSS icoon.</value>
  </data>
  <data name="[RESX:Token:RSSIconLink].Text">
    <value>Toon het standaard RSS icoon als een hyperlink naar de RSS feed.</value>
  </data>
  <data name="[RESX:Token:RSSURL].Text">
    <value>Toon het URL van de RSS feed.</value>
  </data>
  <data name="[RESX:Token:Subject].Text">
    <value>Toon het onderwerp van het bericht.</value>
  </data>
  <data name="[RESX:Token:SubjectLink].Text">
    <value>Toon het onderwerp van het bericht als een hyperlink.</value>
  </data>
  <data name="[RESX:Token:TemplateOnly].Text">
    <value>De volgende tokens kunnen worden gebruikt in het Sjablonen gedeelte.</value>
  </data>
  <data name="[RESX:Token:TopicId].Text">
    <value>Toon het unieke onderwerp id van het bericht.</value>
  </data>
  <data name="[RESX:Token:TopicModuleId].Text">
    <value>Toon de module id voor de instance van de forums waarin het bericht zich bevindt.</value>
  </data>
  <data name="[RESX:Token:TopicsURL].Text">
    <value>Toon het URL voor het bericht.</value>
  </data>
  <data name="[RESX:Token:TopicTabId].Text">
    <value>Toon het tab id van de pagina waarop het bericht zich bevindt.</value>
  </data>
</root>