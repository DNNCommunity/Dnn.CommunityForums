SET NOCOUNT ON 
GO

/* issues 1277 - begin - issues with hard-deleting a topic */

/*activeforums_Topics_Tracking_UpdateUser*/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Topics_Tracking_UpdateUser]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Topics_Tracking_UpdateUser]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Topics_Tracking_UpdateUser]
	@ForumId int,
	@TopicId int,
	@LastReplyId int,
	@UserId int
	
AS
IF EXISTS (SELECT TopicId FROM {databaseOwner}{objectQualifier}activeforums_Topics WHERE TopicId = @TopicId) AND EXISTS(SELECT ForumId FROM {databaseOwner}{objectQualifier}activeforums_Forums WHERE ForumId = @ForumId) 
BEGIN 
    IF EXISTS(SELECT TrackingId FROM {databaseOwner}{objectQualifier}activeforums_Topics_Tracking WHERE UserId = @UserId AND ForumId = @ForumId AND TopicId = @TopicId)
	    UPDATE {databaseOwner}{objectQualifier}activeforums_Topics_Tracking
		    SET DateAdded = GETUTCDATE(), LastReplyId = @LastReplyId
		    WHERE UserId = @UserId AND ForumId = @ForumID AND TopicId = @TopicId
    ELSE
	BEGIN
		-- Simulated latency to reproduce duplicate tracking record issue
		WAITFOR DELAY '00:00:00:250'

	    INSERT INTO {databaseOwner}{objectQualifier}activeforums_Topics_Tracking
		    (ForumId, TopicId, LastReplyId, UserId,DateAdded)
		    VALUES
		    (@ForumId, @TopicId, @LastReplyId, @UserId, GETUTCDATE())
	END
END            

IF  EXISTS(SELECT ForumId FROM {databaseOwner}{objectQualifier}activeforums_Forums WHERE ForumId = @ForumId) 
BEGIN
    IF EXISTS(SELECT TrackingId FROM {databaseOwner}{objectQualifier}activeforums_Forums_Tracking WHERE UserId = @UserId AND ForumId = @ForumId)
	    UPDATE {databaseOwner}{objectQualifier}activeforums_Forums_Tracking
        SET LastAccessDate = GETUTCDATE(), MaxTopicRead = CASE WHEN MaxTopicRead > @TopicId THEN MaxTopicRead ELSE @TopicId END, MaxReplyRead = CASE WHEN MaxReplyRead > @LastReplyId THEN MaxReplyRead ELSE @LastReplyId END 
	    WHERE UserId = @UserId AND ForumId = @ForumID AND (MaxTopicRead < @TopicId OR MaxReplyRead < @LastReplyId)
    ELSE
	    INSERT INTO {databaseOwner}{objectQualifier}activeforums_Forums_Tracking
	    (ModuleId, UserId, ForumId, LastAccessDate, MaxTopicRead, MaxReplyRead)
	    SELECT ModuleId, @UserId, @ForumId, GETUTCDATE(), @TopicId, @LastReplyId 
        FROM {databaseOwner}{objectQualifier}activeforums_Forums 
        WHERE ForumId = @ForumId
END

GO


/*activeforums_Forums_Tracking_UpdateUser*/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Forums_Tracking_UpdateUser]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Forums_Tracking_UpdateUser]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Forums_Tracking_UpdateUser]
	@ModuleId int,
	@UserId int,
	@ForumId int
AS
IF EXISTS(SELECT ForumId FROM {databaseOwner}{objectQualifier}activeforums_Forums WHERE ForumId = @ForumId) 
BEGIN 
    IF EXISTS(SELECT TrackingId FROM {databaseOwner}{objectQualifier}activeforums_Forums_Tracking WHERE UserId = @UserId AND ForumId = @ForumId)
	    UPDATE {databaseOwner}{objectQualifier}activeforums_Forums_Tracking
		    SET LastAccessDate = GETUTCDATE()
		    WHERE UserId = @UserId AND ForumId = @ForumID
    ELSE
	    INSERT INTO {databaseOwner}{objectQualifier}activeforums_Forums_Tracking
		    (ModuleId, UserId, ForumId, LastAccessDate)
		    VALUES
		    (@ModuleId, @UserId, @ForumId, GETUTCDATE())
END

GO

/* issues 1277 - end - issues with hard-deleting a topic */


/* --------------------- */


/* --------------------- */
SET NOCOUNT ON 
GO

/* issues 1273 begin - exception from TopicsView when multiple forum instances */

/*activeforums_UI_TopicsView */
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UI_TopicsView]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UI_TopicsView]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UI_TopicsView]
@PortalId int,
@ModuleId int,
@ForumId int,
@UserId int,
@RowIndex int = 0, 
@MaxRows int = 20,
@IsSuperUser bit = 0,
@SortColumn nvarchar(25) = 'ReplyCreated'
AS
--Forum/Group Info
DECLARE @PrefixURL nvarchar(255)
DECLARE @GroupPrefix nvarchar(255)
SET @GroupPrefix = (SELECT g.PrefixURL from {databaseOwner}{objectQualifier}activeforums_Groups as g INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as f ON f.ForumGroupId = g.ForumGroupId WHERE f.ForumId=@ForumId)
SET @PrefixURL = (SELECT PRefixURL from {databaseOwner}{objectQualifier}activeforums_Forums WHERE ForumId = @ForumId)
IF @PrefixURL <> '' OR @PrefixURL IS NOT NULL
	SET @PrefixURL = '/' + @PrefixURL + '/'
IF @GroupPrefix <> '' OR @GroupPrefix IS NOT NULL
	SET @PrefixURL = '/' + @GroupPrefix + @PrefixURL 
BEGIN
	SELECT v.ForumName, v.GroupName, v.ForumGroupId, v.ForumDesc,
		TopicsTemplateId = IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE ModuleId = @ModuleId AND SettingName = 'TOPICSTEMPLATEID' and GroupKey = v.ForumSettingsKey),0),
		AllowRSS = IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE ModuleId = @ModuleId AND SettingName = 'ALLOWRSS' and GroupKey = v.ForumSettingsKey),0),
		TopicRowCount = IsNull((SELECT Count(t.TopicId) FROM {databaseOwner}{objectQualifier}activeforums_Topics as t inner join {databaseOwner}{objectQualifier}activeforums_ForumTopics as ft on t.topicid = ft.topicid WHERE ft.ForumId = @ForumId AND t.IsApproved = 1 and t.IsDeleted = 0),0),
		IsSubscribedForum = IsNull((SELECT ID FROM {databaseOwner}{objectQualifier}activeforums_Subscriptions WHERE ModuleId = @ModuleId AND ForumId = @ForumId AND TopicId = 0 AND UserId = @UserId),0),
					COALESCE((SELECT COUNT(*)
							  FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions
							  WHERE    (ModuleId = @ModuleId) AND (ForumId = @ForumId) AND (TopicId = 0)), 0) AS ForumSubscriberCount
		
		 FROM {databaseOwner}{objectQualifier}vw_activeforums_GroupForum as v WHERE v.ForumActive = 1 AND v.ModuleId = @ModuleId AND v.ForumId = @ForumId
END
--Forum Security
BEGIN
	Select p.* from {databaseOwner}{objectQualifier}activeforums_Permissions as p INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as f ON f.PermissionsId = p.PermissionsId WHERE f.ModuleId = @ModuleId AND f.ForumId = @ForumId
	
END
--Get Sub Forums
 exec {databaseOwner}{objectQualifier}activeforums_UI_ForumView @PortalId, @ModuleId,@UserId,@IsSuperUser, @ForumId

--Get Topics

SELECT 
	ForumId,
	LastReplyId,
	TopicId,
    ContentId,
	ViewCount,
	ReplyCount,
	IsLocked,
	IsPinned,
    IsApproved,
    IsDeleted,
    IsRejected,
    IsArchived,
	TopicIcon,
	StatusId,
	IsAnnounce,
	AnnounceStart,
	AnnounceEnd,
	TopicType,
    Priority,
	[Subject],
	Summary,
	AuthorId,
	AuthorName,
	Body,
	DateCreated,
	AuthorUserName,
	AuthorFirstName,
	AuthorLastName,
	AuthorDisplayName,
	LastReplyContentId,
	LastReplySubject,
	LastReplySummary,
	LastReplyAuthorId,
	LastReplyAuthorName,
	LastReplyUserName,
	LastReplyFirstName,
	LastReplyLastName,
	LastReplyDisplayName,
	LastReplyDate,
	TopicRating,
	UserLastReplyRead,
	UserLastTopicRead,
	TopicURL,
	TopicData,
	FullURL,
	TopicSubscriberCount,
	ForumSubscriberCount
	FROM (

SELECT 
	f.ForumId,
	IsNull(f.LastReplyId,0) as LastReplyId,
	t.TopicId,
    CASE WHEN rc.ContentId IS NULL THEN c.ContentId ELSE rc.ContentId END as ContentId,
	t.ViewCount,
	t.ReplyCount,
	t.IsLocked,
	t.IsPinned,
    t.IsApproved,
    t.IsDeleted,
    t.IsRejected,
    t.IsArchived,
	IsNull(t.TopicIcon,'') as TopicIcon,
	t.StatusId,
	t.IsAnnounce,
	t.AnnounceStart,
	t.AnnounceEnd,
	t.TopicType, 
    t.Priority,
	c.Subject,
	IsNull(c.Summary,'') as Summary,
	IsNull(c.AuthorId,-1) as AuthorId,
	IsNull(c.AuthorName,'') as AuthorName,
	c.Body,
	c.DateCreated,
	IsNull(u.Username,'') as AuthorUserName,
	IsNull(u.FirstName,'') as AuthorFirstName,
	IsNull(u.LastName,'') as AuthorLastName,
	IsNull(u.DisplayName,'') as AuthorDisplayName,
	CASE WHEN rc.ContentId IS NULL THEN c.ContentId ELSE rc.ContentId END as LastReplyContentId,
	CASE WHEN rc.Subject IS NULL THEN c.Subject ELSE rc.Subject END as LastReplySubject,
	CASE WHEN rc.Summary IS NULL THEN IsNull(c.Summary,'') ELSE rc.Summary END as LastReplySummary,
	CASE WHEN rc.AuthorId IS NULL THEN c.AuthorId ELSE rc.AuthorId END as LastReplyAuthorId,
	CASE WHEN rc.AuthorName IS NULL THEN IsNull(c.AuthorName,'') ELSE rc.AuthorName END  as LastReplyAuthorName,
	CASE WHEN ru.Username IS NULL THEN IsNull(u.UserName,'') ELSE ru.UserName END as LastReplyUserName,
	CASE WHEN ru.FirstName IS NULL THEN IsNULL(u.FirstName,'') ELSE ru.FirstName END as LastReplyFirstName,
	CASE WHEN ru.LastName IS NULL THEN IsNull(u.LastName,'') ELSE ru.LastName END as LastReplyLastName,
	CASE WHEN ru.DisplayName IS NULL THEN IsNull(IsNull(u.DisplayName,rc.AuthorName),'') ELSE ru.DisplayName END as LastReplyDisplayName,
	CASE WHEN rc.DateCreated IS NULL THEN c.DateCreated ELSE rc.DateCreated END  as LastReplyDate,
	CASE WHEN FT.MaxReplyRead > TT.LastReplyId OR TT.LastReplyID IS NULL THEN ISNULL(FT.MaxReplyRead,0) ELSE TT.LastReplyId END AS UserLastReplyRead, 
	CASE WHEN FT.MaxTopicRead > TT.TopicId OR TT.TopicId IS NULL THEN ISNULL(FT.MaxTopicRead,0) ELSE TT.TopicId END AS UserLastTopicRead,
	t.URL as TopicURL,
	IsNull(t.TopicData,'') as TopicData,
	CASE WHEN ISNULL(t.URL,'') <> '' THEN @PrefixURL + t.URL ELSE '' END as FullURL,
	(SELECT     ISNULL(AVG(Rating), 0) AS Expr1
                            FROM	{databaseOwner}{objectQualifier}activeforums_Topics_Ratings
                            WHERE      (TopicId = T.TopicId)) AS TopicRating, 
						ROW_NUMBER() OVER (ORDER BY T.IsPinned DESC, T.Priority DESC,
								CASE
									WHEN @SortColumn = 'ReplyCreated' THEN 
										CASE WHEN rc.DateCreated IS NULL THEN c.DateCreated ELSE rc.DateCreated END
									WHEN @SortColumn = 'TopicCreated' THEN
										c.DateCreated
								END DESC) as RowRank,
					COALESCE((SELECT COUNT(*)
							  FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions
							  WHERE     (ModuleId = @ModuleId) AND (ForumId = @ForumId) AND (TopicId = T.TopicId)), 0) AS TopicSubscriberCount,
					COALESCE((SELECT COUNT(*)
							  FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions
							  WHERE     (ModuleId = @ModuleId) AND (ForumId = @ForumId) AND (TopicId = 0)), 0) AS ForumSubscriberCount
				
		FROM	{databaseOwner}{objectQualifier}activeforums_ForumTopics AS f INNER JOIN
				{databaseOwner}{objectQualifier}activeforums_Topics as t on f.TopicId = t.TopicId INNER JOIN
				{databaseOwner}{objectQualifier}activeforums_Content as c on t.ContentId = c.ContentId LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}Users as u on c.AuthorId = u.UserId LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}activeforums_Replies as r on f.LastReplyId = r.ReplyId LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}activeforums_Content as rc on r.ContentId = rc.ContentId LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}Users as ru on rc.AuthorId = ru.UserId LEFT OUTER JOIN				
                {databaseOwner}{objectQualifier}activeforums_Topics_Tracking AS TT ON T.TopicId = TT.TopicId AND TT.UserId = @UserId LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}activeforums_Forums_Tracking as FT ON f.ForumId = FT.ForumId AND FT.UserId = @UserId
	
		WHERE     (f.ForumId = @ForumId AND t.IsApproved = 1 AND t.IsDeleted = 0)	
		) AS TopicsWithRowNumbers
	WHERE RowRank > @RowIndex AND RowRank <= (@RowIndex + @MaxRows)
	IF @RowIndex = 0
	BEGIN
		SELECT 
        f.ForumId,
	    IsNull(f.LastReplyId,0) as LastReplyId,
	    t.TopicId,
	    CASE WHEN rc.ContentId IS NULL THEN c.ContentId ELSE rc.ContentId END as ContentId,
	    t.ViewCount,
	    t.ReplyCount,
	    t.IsLocked,
	    t.IsPinned,
        t.IsApproved,
        t.IsDeleted,
        t.IsRejected,
        t.IsArchived,
	    IsNull(t.TopicIcon,'') as TopicIcon,
	    t.StatusId,
	    t.IsAnnounce,
	    t.AnnounceStart,
	    t.AnnounceEnd,
	    t.TopicType,
        t.Priority,
	    c.Subject,
	    IsNull(c.Summary,'') as Summary,
	    IsNull(c.AuthorId,-1) as AuthorId,
	    IsNull(c.AuthorName,'') as AuthorName,
	    c.Body,
	    c.DateCreated,
	    IsNull(u.Username,'') as AuthorUserName,
	    IsNull(u.FirstName,'') as AuthorFirstName,
	    IsNull(u.LastName,'') as AuthorLastName,
	    IsNull(u.DisplayName,'') as AuthorDisplayName,
	    CASE WHEN rc.ContentId IS NULL THEN c.ContentId ELSE rc.ContentId END as LastReplyContentId,
	    CASE WHEN rc.Subject IS NULL THEN c.Subject ELSE rc.Subject END as LastReplySubject,
	    CASE WHEN rc.Summary IS NULL THEN IsNull(c.Summary,'') ELSE rc.Summary END as LastReplySummary,
	    CASE WHEN rc.AuthorId IS NULL THEN c.AuthorId ELSE rc.AuthorId END as LastReplyAuthorId,
	    CASE WHEN rc.AuthorName IS NULL THEN IsNull(c.AuthorName,'') ELSE rc.AuthorName END  as LastReplyAuthorName,
	    CASE WHEN ru.Username IS NULL THEN IsNull(u.UserName,'') ELSE ru.UserName END as LastReplyUserName,
	    CASE WHEN ru.FirstName IS NULL THEN IsNULL(u.FirstName,'') ELSE ru.FirstName END as LastReplyFirstName,
	    CASE WHEN ru.LastName IS NULL THEN IsNull(u.LastName,'') ELSE ru.LastName END as LastReplyLastName,
	    CASE WHEN ru.DisplayName IS NULL THEN IsNull(IsNull(u.DisplayName,rc.AuthorName),'') ELSE ru.DisplayName END as LastReplyDisplayName,
	    CASE WHEN rc.DateCreated IS NULL THEN c.DateCreated ELSE rc.DateCreated END  as LastReplyDate,
	    CASE WHEN FT.MaxReplyRead > TT.LastReplyId OR TT.LastReplyID IS NULL THEN ISNULL(FT.MaxReplyRead,0) ELSE TT.LastReplyId END AS UserLastReplyRead, 
	    CASE WHEN FT.MaxTopicRead > TT.TopicId OR TT.TopicId IS NULL THEN ISNULL(FT.MaxTopicRead,0) ELSE TT.TopicId END AS UserLastTopicRead,
	    t.URL as TopicURL,
	    IsNull(t.TopicData,'') as TopicData,
	    CASE WHEN ISNULL(t.URL,'') <> '' THEN @PrefixURL + t.URL ELSE '' END as FullURL,
	    (SELECT     ISNULL(AVG(Rating), 0) AS Expr1
                                FROM	{databaseOwner}{objectQualifier}activeforums_Topics_Ratings
                                WHERE      (TopicId = T.TopicId)) AS TopicRating, 
						    ROW_NUMBER() OVER (ORDER BY T.IsPinned DESC,
								    CASE
									    WHEN rc.DateCreated IS NULL THEN c.DateCreated ELSE rc.DateCreated END DESC
											    ) as RowRank,
					    COALESCE((SELECT COUNT(*)
							      FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions
							      WHERE     (ModuleId = @ModuleId) AND (ForumId = @ForumId) AND (TopicId = T.TopicId)), 0) AS TopicSubscriberCount,
					    COALESCE((SELECT COUNT(*)
							      FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions
							      WHERE     (ModuleId = @ModuleId) AND (ForumId = @ForumId) AND (TopicId = 0)), 0) AS ForumSubscriberCount
				
		    FROM	{databaseOwner}{objectQualifier}activeforums_ForumTopics AS f INNER JOIN
				    {databaseOwner}{objectQualifier}activeforums_Topics as t on f.TopicId = t.TopicId INNER JOIN
				    {databaseOwner}{objectQualifier}activeforums_Content as c on t.ContentId = c.ContentId LEFT OUTER JOIN
				    {databaseOwner}{objectQualifier}Users as u on c.AuthorId = u.UserId LEFT OUTER JOIN
				    {databaseOwner}{objectQualifier}activeforums_Replies as r on f.LastReplyId = r.ReplyId LEFT OUTER JOIN
				    {databaseOwner}{objectQualifier}activeforums_Content as rc on r.ContentId = rc.ContentId LEFT OUTER JOIN
				    {databaseOwner}{objectQualifier}Users as ru on rc.AuthorId = ru.UserId LEFT OUTER JOIN				
                    {databaseOwner}{objectQualifier}activeforums_Topics_Tracking AS TT ON T.TopicId = TT.TopicId AND TT.UserId = @UserId LEFT OUTER JOIN
				    {databaseOwner}{objectQualifier}activeforums_Forums_Tracking as FT ON f.ForumId = FT.ForumId AND FT.UserId = @UserId
	
		    WHERE     (f.ForumId = @ForumId AND t.IsApproved = 1 AND t.IsDeleted = 0 AND T.IsAnnounce = 1 AND T.AnnounceStart <= GETUTCDATE() AND T.AnnounceEnd >= GETUTCDATE())
		    ORDER BY T.IsPinned DESC, c.DateCreated DESC, rc.DateCreated DESC
	END
BEGIN
If @UserId > 0
	BEGIN
	exec {databaseOwner}{objectQualifier}activeforums_Forums_Tracking_UpdateUser @ModuleId, @UserId, @ForumId
	exec {databaseOwner}{objectQualifier}activeforums_UserProfiles_UpdateActivity @PortalId, @UserId
	END
END

GO

/* remove invalid subscriptions */
DELETE s FROM {databaseOwner}{objectQualifier}activeforums_Subscriptions s
LEFT OUTER JOIN {databaseOwner}{objectQualifier}activeforums_Forums f
ON f.ForumId = s.ForumId 
WHERE f.ModuleId <> s.ModuleId
GO

/* issues 1273 end - exception from TopicsView when multiple forum instances */


/* --------------------- */


/* --------------------- */

/* issue 1283 begin: activeforums_UserProfiles FK to UserPortals  */


/* activeforums_UserProfiles -- remove columns no longer used */
IF EXISTS(SELECT * FROM sys.columns WHERE [name] = N'ForumSecurityKey' AND [object_id] = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles]'))
ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] DROP COLUMN DateCreated
GO

IF EXISTS(SELECT * FROM sys.columns WHERE [name] = N'ForumSecurityKey' AND [object_id] = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles]'))
ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] DROP COLUMN DateUpdated
GO

/* activeforums_UserProfiles - re-add FK and cascade delete (but with NOCHECK) from UserPortals */
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}activeforums_UserProfiles_UserPortals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles]'))
ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] DROP CONSTRAINT 
[FK_{objectQualifier}activeforums_UserProfiles_UserPortals]
GO

ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] ADD CONSTRAINT
	[FK_{objectQualifier}activeforums_UserProfiles_UserPortals] FOREIGN KEY (UserId, PortalId) 
	REFERENCES {databaseOwner}[{objectQualifier}UserPortals] (UserId, PortalId) 
	ON DELETE CASCADE 
GO

ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] WITH NOCHECK 
NOCHECK CONSTRAINT [FK_{objectQualifier}activeforums_UserProfiles_UserPortals] 
GO



/*activeforums_UserProfiles_Create*/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles_Create]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_Create]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_Create]
@PortalId int,
@UserId int
AS
IF NOT EXISTS(Select ProfileId FROM {databaseOwner}{objectQualifier}activeforums_UserProfiles WHERE UserId = @UserId AND PortalId = @PortalId)
	BEGIN
	INSERT INTO {databaseOwner}{objectQualifier}activeforums_UserProfiles
		(UserId, PortalId, DateLastActivity)
		VALUES
		(@UserId, @PortalId, GETUTCDATE())
	DECLARE @TopicCount int 
	DECLARE @ReplyCount int
	SELECT @TopicCount = Count(*) FROM {databaseOwner}{objectQualifier}activeforums_Topics as T INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Content as C ON T.ContentId = C.ContentId
	WHERE c.authorid = @UserId
	SELECT @ReplyCount = Count(*) FROM {databaseOwner}{objectQualifier}activeforums_Replies as R INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Content as C ON R.ContentId = C.ContentId
	WHERE c.authorid = @UserId
	UPDATE {databaseOwner}{objectQualifier}activeforums_UserProfiles
		SET TopicCount = @TopicCount, ReplyCount = @ReplyCount WHERE UserId = @UserId AND PortalId = @PortalId
	END
GO

/*activeforums_UserProfiles_Get*/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[{objectQualifier}activeforums_UserProfiles_Get]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_Get]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_Get]
	@PortalId int,
	@UserId int
AS
BEGIN
exec {databaseOwner}{objectQualifier}activeforums_UserProfiles_Create @PortalId, @UserId
	SET NOCOUNT ON
	SELECT		P.ProfileId, P.UserId, P.PortalId, P.TopicCount, P.ReplyCount, P.ViewCount, 
				P.AnswerCount, P.RewardPoints, P.UserCaption, U.CreatedOnDate AS CreatedDate, 
                U.LastModifiedOnDate AS DateUpdated, P.DateLastActivity, P.Signature, P.SignatureDisabled, 
				P.TrustLevel, P.AdminWatch, P.AttachDisabled, P.Avatar, P.AvatarType, P.AvatarDisabled, 
				P.PrefDefaultSort, P.PrefDefaultShowReplies, P.PrefJumpLastPost, P.PrefTopicSubscribe,
				P.PrefSubscriptionType, P.PrefEmailFormat, P.PrefBlockAvatars, 
				P.PrefBlockSignatures, P.PrefPageSize,
				IsNull(U.Username,'') as UserName, IsNull(U.FirstName,'') as FirstName, 
				IsNull(U.LastName,'') as LastName, IsNull(U.Email,'') as Email, IsNull(U.DisplayName,'') as DisplayName,
				IsUserOnline = (CASE WHEN DATEDIFF(mi,p.DateLastActivity,GETUTCDATE()) <=1 THEN 1 ELSE 0 END),
				IsNull(P.DateLastPost,'') as DateLastPost,
				IsNull(P.DateLastReply,'') as DateLastReply
	FROM        {databaseOwner}{objectQualifier}activeforums_UserProfiles AS P WITH (NOLOCK) LEFT OUTER JOIN
                {databaseOwner}{objectQualifier}Users AS U WITH (NOLOCK) ON P.UserId = U.UserID
	WHERE P.UserId = @UserId AND P.PortalId = @PortalId
END
GO

/*activeforums_DashBoard_Stats*/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_DashBoard_Stats]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_DashBoard_Stats]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_DashBoard_Stats]
@PortalId int,
@ModuleId int
AS
BEGIN
SELECT     TOP 5 T.TopicId, C.Subject, C.DateCreated, U.Username, U.FirstName, U.LastName, U.DisplayName, C.AuthorName, C.Summary
FROM         {databaseOwner}{objectQualifier}activeforums_Topics  AS T WITH (NOLOCK) INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Content  AS C WITH (NOLOCK) ON T.ContentId = C.ContentId INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_ForumTopics AS FT WITH (NOLOCK) ON T.TopicId = FT.TopicId INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Forums  AS F WITH (NOLOCK) ON FT.ForumId = F.ForumId LEFT OUTER JOIN
                      {databaseOwner}{objectQualifier}Users AS U ON C.AuthorId = U.UserID
WHERE     (T.IsApproved = 1) AND (T.IsDeleted = 0) AND (F.ModuleId = @ModuleId)
ORDER BY C.DateCreated DESC
END
BEGIN
SELECT  TOP 5   U.UserID, U.Username, U.FirstName, U.LastName, U.Email, U.DisplayName, U.CreatedOnDate AS CreatedDate, UP.PortalId
FROM         {databaseOwner}{objectQualifier}Users AS U WITH (NOLOCK) INNER JOIN
                      {databaseOwner}{objectQualifier}UserPortals AS UP WITH (NOLOCK) ON U.UserID = UP.UserId
WHERE     (UP.Authorised = 1) AND (UP.PortalId = @PortalId)
ORDER BY UP.CreatedDate DESC
END
BEGIN

SELECT   TOP 5  ForumId, ModuleId, ForumName, TotalTopics, TotalReplies
FROM         {databaseOwner}{objectQualifier}activeforums_Forums WITH (NOLOCK)
WHERE     (Active = 1) AND (ModuleId = @ModuleId)
ORDER BY (TotalTopics + TotalReplies) DESC
END
BEGIN
SELECT     TOP 10 UP.ProfileId, UP.UserId, UP.PortalId, UP.TopicCount, UP.ReplyCount, UP.ViewCount, UP.AnswerCount, UP.RewardPoints, U.Username, 
                      U.FirstName, U.LastName, U.DisplayName
FROM         {databaseOwner}{objectQualifier}activeforums_UserProfiles AS UP WITH (NOLOCK) INNER JOIN
             {databaseOwner}{objectQualifier}Users  AS U WITH (NOLOCK) ON UP.UserId = U.UserID
WHERE     (UP.PortalId = @PortalId)
ORDER BY ((UP.TopicCount * 10) + (UP.ReplyCount * 5) + UP.ViewCount) DESC
END
BEGIN
DECLARE @TotalForums int
DECLARE @TotalTopics int
DECLARE @TotalReplies int
DECLARE @TotalUsers int
DECLARE @TotalActiveUsers int
SELECT @TotalForums = Count(*) FROM {databaseOwner}{objectQualifier}activeforums_Forums WHERE ModuleId = @ModuleId and Active = 1
SELECT @TotalTopics = SUM(TotalTopics), @TotalReplies = SUM(TotalReplies) FROM {databaseOwner}{objectQualifier}activeforums_Forums WHERE ModuleId = @ModuleId AND Active = 1
SELECT @TotalUsers = Count(*) FROM {databaseOwner}{objectQualifier}Users AS U  WITH (NOLOCK) INNER JOIN
                      {databaseOwner}{objectQualifier}UserPortals AS UP WITH (NOLOCK) ON U.UserID = UP.UserId
WHERE     (UP.Authorised = 1) AND (UP.PortalId = @PortalId)
SELECT @TotalActiveUsers = Count(*) FROM {databaseOwner}{objectQualifier}activeforums_UserProfiles WITH (NOLOCK) WHERE PortalId = @PortalId AND DATEDIFF(dd,GETUTCDATE(),DateLastActivity) < 30
SELECT @TotalForums as TotalForums, @TotalTopics as TotalTopics, @TotalReplies as TotalReplies, @TotalUsers as TotalMembers, @TotalActiveUsers as TotalActiveMembers

END

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}fn_activeforums_GetURL]') AND type in (N'F', N'FN'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}fn_activeforums_GetURL]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Forums_List]') AND type in (N'P', N'PC'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}activeforums_Forums_List]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_MC_FindUserByEmail]') AND type in (N'P', N'PC'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}activeforums_MC_FindUserByEmail]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Replies_UpdateStatus]') AND type in (N'P', N'PC'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}activeforums_Replies_UpdateStatus]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Reply_Save]') AND type in (N'P', N'PC'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}activeforums_Reply_Save]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Subscriptions_Subscribers]') AND type in (N'P', N'PC'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}activeforums_Subscriptions_Subscribers]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Topics_Save]') AND type in (N'P', N'PC'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}activeforums_Topics_Save]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Topics_UpdateStatus]') AND type in (N'P', N'PC'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}activeforums_Topics_UpdateStatus]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UI_ForumView]') AND type in (N'P', N'PC'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}activeforums_UI_ForumView]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UI_TopicView]') AND type in (N'P', N'PC'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}activeforums_UI_TopicView]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UI_TopMembers]') AND type in (N'P', N'PC'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}activeforums_UI_TopMembers]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles_GetUsersOnline]') AND type in (N'P', N'PC'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}activeforums_UserProfiles_GetUsersOnline]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles_List]') AND type in (N'P', N'PC'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}activeforums_UserProfiles_List]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles_Save]') AND type in (N'P', N'PC'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}activeforums_UserProfiles_Save]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles_Stats]') AND type in (N'P', N'PC'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}activeforums_UserProfiles_Stats]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_TopicsList]') AND type in (N'P', N'PC'))
EXECUTE sys.sp_refreshsqlmodule '{databaseOwner}[{objectQualifier}activeforums_UserProfiles_UpdateActivity]';
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_TopicsList]') AND type in (N'P', N'PC'))
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}activeforums_TopicsList]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UI_TopMembers]') AND type in (N'P', N'PC'))
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}activeforums_UI_TopMembers]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UI_TopicsView]') AND type in (N'P', N'PC'))
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}activeforums_UI_TopicsView]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UI_TopicsDisplay]') AND type in (N'P', N'PC'))
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}activeforums_UI_TopicsDisplay]';
GO

/* issue 1283 end: activeforums_UserProfiles FK to UserPortals  */


/* --------------------- */
