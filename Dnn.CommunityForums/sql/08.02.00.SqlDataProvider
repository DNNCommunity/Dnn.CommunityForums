/* issue 761 begin : remove unneeded user preferences */

/*activeforums_UserProfiles_Get*/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[{objectQualifier}activeforums_UserProfiles_Get]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_Get]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_Get]
	@PortalId int,
	@ModuleId int,
	@UserId int
AS
BEGIN
exec {databaseOwner}{objectQualifier}activeforums_UserProfiles_Create @PortalId, @ModuleId, @UserId
	SET NOCOUNT ON
	SELECT		P.ProfileId, P.UserId, P.ModuleId, P.PortalId, P.TopicCount, P.ReplyCount, P.ViewCount, 
				P.AnswerCount, P.RewardPoints, P.UserCaption, P.DateCreated, 
                P.DateUpdated, P.DateLastActivity, P.Signature, P.SignatureDisabled, 
				P.TrustLevel, P.AdminWatch, P.AttachDisabled, P.Avatar, P.AvatarType, P.AvatarDisabled, 
				P.PrefDefaultSort, P.PrefDefaultShowReplies, P.PrefJumpLastPost, P.PrefTopicSubscribe,
				P.PrefSubscriptionType, P.PrefEmailFormat, P.PrefBlockAvatars, 
				P.PrefBlockSignatures, P.PrefPageSize,
				IsNull(U.Username,'') as UserName, IsNull(U.FirstName,'') as FirstName, 
				IsNull(U.LastName,'') as LastName, IsNull(U.Email,'') as Email, IsNull(U.DisplayName,'') as DisplayName,
				IsUserOnline = (CASE WHEN DATEDIFF(mi,p.DateLastActivity,GETUTCDATE()) <=1 THEN 1 ELSE 0 END),
				IsNull(P.DateLastPost,'') as DateLastPost,
				IsNull(P.DateLastReply,'') as DateLastReply
	FROM        {databaseOwner}{objectQualifier}activeforums_UserProfiles AS P WITH (NOLOCK) LEFT OUTER JOIN
                {databaseOwner}{objectQualifier}Users AS U WITH (NOLOCK) ON P.UserId = U.UserID
	WHERE P.UserId = @UserId AND P.PortalId = @PortalId AND P.ModuleId = -1
END
GO


/*activeforums_UserProfiles_List*/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles_List]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_List]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_List]
	@PortalId int,
	@ModuleId int,
	@MaxRows int,
	@RowIndex int,
	@Filter nvarchar(50)
AS
BEGIN
SELECT COUNT(U.UserId) FROM {databaseOwner}{objectQualifier}Users AS U INNER JOIN {databaseOwner}{objectQualifier}UserPortals AS P ON U.UserID = P.UserId 
WHERE PortalId = @PortalId AND Authorised = 1 AND (@Filter = '' OR @Filter <> '' AND DisplayName LIKE @Filter + '%')
END
BEGIN
	SELECT 		ProfileId, UserId, ModuleId, PortalId, TopicCount, ReplyCount, ViewCount, 
				AnswerCount, RewardPoints, UserCaption, DateCreated, 
                DateUpdated, DateLastActivity, [Signature], SignatureDisabled, 
				TrustLevel, AdminWatch, AttachDisabled, Avatar, AvatarType, AvatarDisabled, 
				PrefDefaultSort, PrefDefaultShowReplies, PrefJumpLastPost, PrefTopicSubscribe,
				PrefSubscriptionType, PrefEmailFormat, PrefBlockAvatars, 
				PrefBlockSignatures, PrefPageSize,
				UserName, FirstName, 
				LastName, Email, DisplayName,
				DateLastPost,IsUserOnline, RowRank
	
		 FROM (SELECT P.ProfileId, U.UserId, P.ModuleId, UP.PortalId,
		 			IsNull(P.TopicCount,0) as TopicCount,
				IsNull(P.ReplyCount,0) as ReplyCount,
				IsNull(P.ViewCount,0) as ViewCount,
				IsNull(P.AnswerCount,0) as AnswerCount,
				IsNull(P.RewardPoints,0) as RewardPoints,
				P.UserCaption, P.DateCreated, 
                P.DateUpdated, P.DateLastActivity, P.Signature, P.SignatureDisabled, 
				P.TrustLevel, P.AdminWatch, P.AttachDisabled, P.Avatar, P.AvatarType, P.AvatarDisabled, 
				P.PrefDefaultSort, P.PrefDefaultShowReplies, P.PrefJumpLastPost, P.PrefTopicSubscribe,
				P.PrefSubscriptionType, P.PrefEmailFormat, P.PrefBlockAvatars, 
				P.PrefBlockSignatures, P.PrefPageSize, 
				IsNull(U.Username,'') as UserName, IsNull(U.FirstName,'') as FirstName, 
				IsNull(U.LastName,'') as LastName, IsNull(U.Email,'') as Email , IsNull(U.DisplayName,'') as DisplayName,
				IsNull(P.DateLastPost,'') as DateLastPost,
				IsUserOnline = (CASE WHEN DATEDIFF(mi,p.DateLastActivity,GETUTCDATE()) <=1 THEN 1 ELSE 0 END),
				ROW_NUMBER() OVER (Order By DisplayName) as RowRank
				FROM        {databaseOwner}{objectQualifier}Users AS U INNER JOIN
				        {databaseOwner}{objectQualifier}UserPortals AS UP ON U.UserID = UP.UserId LEFT OUTER JOIN
						{databaseOwner}{objectQualifier}activeforums_UserProfiles AS P ON U.UserID = P.UserId AND P.ModuleId = -1
				WHERE     (UP.Authorised = 1) AND (UP.PortalId = @PortalId) AND (@Filter = '' OR @Filter <> '' AND DisplayName LIKE @Filter + '%')
			) as Members
	WHERE RowRank > @RowIndex AND RowRank <= (@RowIndex + @MaxRows)
END
GO



/*activeforums_UserProfiles_Save*/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles_Save]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_Save]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_Save]
@PortalId	int,
@ModuleId	int,
@UserId	int,
@TopicCount	int,
@ReplyCount	int,
@ViewCount	int,
@AnswerCount	int,
@RewardPoints	int,
@UserCaption	nvarchar(255),
@Signature	nvarchar(1500),
@SignatureDisabled	bit,
@TrustLevel int,
@AdminWatch	bit,
@AttachDisabled	bit,
@Avatar	nvarchar(2000),
@AvatarType	int,
@AvatarDisabled	bit,
@PrefDefaultSort	char(10),
@PrefDefaultShowReplies	bit,
@PrefJumpLastPost	bit,
@PrefTopicSubscribe	bit,
@PrefSubscriptionType	int,
@PrefBlockAvatars	bit,
@PrefBlockSignatures	bit,
@PrefPageSize	int
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE    {databaseOwner}{objectQualifier}activeforums_UserProfiles
	SET              TopicCount = @TopicCount, ReplyCount = @ReplyCount, ViewCount = @ViewCount, AnswerCount = @AnswerCount, RewardPoints = @RewardPoints, 
						  UserCaption = @UserCaption, DateUpdated = GETDATE(), [Signature] = @Signature, SignatureDisabled = @SignatureDisabled, TrustLevel = @TrustLevel, 
						  AdminWatch = @AdminWatch, AttachDisabled = @AttachDisabled, Avatar = @Avatar, AvatarType = @AvatarType, AvatarDisabled = @AvatarDisabled, 
						  PrefDefaultSort = @PrefDefaultSort, PrefDefaultShowReplies = @PrefDefaultShowReplies, PrefJumpLastPost = @PrefJumpLastPost, 
						  PrefTopicSubscribe = @PrefTopicSubscribe, PrefSubscriptionType = @PrefSubscriptionType, PrefBlockAvatars = @PrefBlockAvatars, 
						  PrefBlockSignatures = @PrefBlockSignatures, PrefPageSize = @PrefPageSize
	WHERE     (UserId = @UserId) AND (ModuleId = @ModuleId) AND (PortalId = @PortalId)
END
GO


/*activeforums_UI_ForumView*/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UI_ForumView]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UI_ForumView]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UI_ForumView]
@PortalId int,
@ModuleId int,
@UserId int,
@IsSuperUser bit = 0,
@ParentForumId int = -1,
@ForumIds nvarchar(2000) = ''
AS
IF @ParentForumId = -1
BEGIN
SELECT         G.ForumGroupId, G.ModuleId, G.GroupName, F.ForumId, F.ForumName, F.ForumDesc, F.Active AS ForumActive, F.Hidden AS ForumHidden, F.TotalTopics, 
					F.TotalReplies, F.ParentForumId, G.SortOrder AS GroupSort, 
					F.SortOrder AS ForumSort, G.Active AS GroupActive, G.Hidden AS GroupHidden,
					F.LastTopicId,
					F.LastReplyId,
					IsNull(F.LastPostSubject,'') as LastPostSubject,
					IsNull(F.LastPostAuthorName,'') as LastPostAuthorName,
					IsNull(F.LastPostAuthorId,-1) as LastPostAuthorId,
					IsNull(F.LastPostDate,'') as LastPostDate,
					ISNULL(g.PrefixURL,'') as GroupPrefixURL,
					ISNULL(f.PrefixURL, '') as PrefixURL,
					LastRead = IsNull((SELECT LastAccessDate FROM {databaseOwner}{objectQualifier}activeforums_Forums_Tracking WHERE UserId = @UserId AND ForumId = F.ForumId),''),
					"AllowRSS" = (SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE ModuleId = F.ModuleId AND GroupKey = F.ForumSettingsKey AND SettingName = 'ALLOWRSS'),
					P.*,
					ISNULL(t.URL,'') as TopicURL,
					COALESCE((SELECT  COUNT(*)
							  FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions
							  WHERE     (ForumId = F.ForumId) AND (TopicId = 0)) , 0) AS ForumSubscriberCount
	FROM         
		{databaseOwner}{objectQualifier}activeforums_Groups AS G INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_Forums AS F ON G.ForumGroupId = F.ForumGroupId INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_Permissions as p ON f.PermissionsId = p.PermissionsId INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_Functions_Split(@ForumIds,';') as ft ON ft.id = f.ForumId LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}activeforums_Topics as t ON t.TopicId = f.LastTopicId
	WHERE G.ModuleId = @ModuleId AND (G.Active = 1 AND F.Active = 1) AND (@ParentForumId = -1 OR (@ParentForumId > 0 AND F.ParentForumId = @ParentForumId))
	ORDER BY GroupSort, ForumSort
END
ELSE
BEGIN
SELECT         G.ForumGroupId, G.ModuleId, G.GroupName, F.ForumId, F.ForumName, F.ForumDesc, F.Active AS ForumActive, F.Hidden AS ForumHidden, F.TotalTopics, 
					F.TotalReplies, F.ParentForumId, G.SortOrder AS GroupSort, F.SortOrder AS ForumSort, G.Active AS GroupActive, G.Hidden AS GroupHidden,
					F.LastTopicId,
					F.LastReplyId,
					IsNull(F.LastPostSubject,'') as LastPostSubject,
					IsNull(F.LastPostAuthorName,'') as LastPostAuthorName,
					IsNull(F.LastPostAuthorId,-1) as LastPostAuthorId,
					IsNull(F.LastPostDate,'') as LastPostDate,
					ISNULL(g.PrefixURL,'') as GroupPrefixURL,
					ISNULL(f.PrefixURL, '') as PrefixURL,
					ISNULL(t.URL, '') as TopicURL,
					COALESCE((SELECT  COUNT(*)
							  FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions
							  WHERE     (ForumId = F.ForumId) AND (TopicId = 0)) , 0) AS ForumSubscriberCount,
					LastRead = IsNull((SELECT LastAccessDate FROM {databaseOwner}{objectQualifier}activeforums_Forums_Tracking WHERE UserId = @UserId AND ForumId = F.ForumId),''),
					"AllowRSS" = (SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE ModuleId = F.ModuleId AND GroupKey = F.ForumSettingsKey AND SettingName = 'ALLOWRSS'),
					P.*
	FROM         
		{databaseOwner}{objectQualifier}activeforums_Groups AS G INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_Forums AS F ON G.ForumGroupId = F.ForumGroupId INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_Permissions as p ON f.PermissionsId = p.PermissionsId LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}activeforums_Topics as t ON t.TopicId = f.LastTopicId 
					 
	WHERE G.ModuleId = @ModuleId AND (G.Active = 1 AND F.Active = 1) AND (@ParentForumId = -1 OR (@ParentForumId > 0 AND F.ParentForumId = @ParentForumId))
	ORDER BY GroupSort, ForumSort
END
If @UserId > 0 AND @ParentForumId =-1
	BEGIN
	SELECT TopicCount, ReplyCount, ViewCount, AnswerCount, RewardPoints, DateLastActivity, 
                      DateLastPost, SignatureDisabled, TrustLevel, AdminWatch, AttachDisabled, PrefDefaultSort, PrefDefaultShowReplies, 
                      PrefJumpLastPost, PrefTopicSubscribe, PrefSubscriptionType, PrefEmailFormat, PrefBlockAvatars, PrefBlockSignatures, PrefPageSize
                      
	FROM         {databaseOwner}{objectQualifier}activeforums_UserProfiles WHERE UserId = @UserId AND PortalId = @PortalId
	END


GO

/*activeforums_UI_TopicView*/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UI_TopicView]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UI_TopicView]
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}activeforums_UI_TopicView
@PortalId int,
@ModuleId int,
@ForumId int,
@TopicId int,
@UserId int,
@RowIndex int, 
@MaxRows int,
@IsSuperUser bit = 0,
@Sort varchar(10) = 'ASC'
AS
--Forum/Group/Topic Info
DECLARE @LastPostId int
DECLARE @ReplyCount int
SET @ReplyCount = (Select Count(ReplyId) from {databaseOwner}{objectQualifier}activeforums_Replies WHERE TopicId = @TopicId AND IsDeleted = 0 AND IsApproved = 1)
DECLARE @Tags nvarchar(1000)
SET @Tags= RTRIM(IsNull({databaseOwner}{objectQualifier}activeforums_Topics_GetTags(@TopicId),''))
BEGIN
SELECT     
	v.ForumGroupId, 
	v.ModuleId, 
	v.GroupName, 
	v.GroupActive, 
	v.GroupHidden, 
	v.ForumId, 
	v.ParentForumId, 
	v.ForumName, 
	v.ForumDesc, 
	v.ForumActive, 
	v.ForumHidden, 
	v.TotalTopics, 
	ISNULL(v.TotalReplies, 0) AS TotalReplies,
	v.LastPostId,
	v.GroupSettingsKey,
	v.ForumSettingsKey,
	TopicTemplateId = IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE SettingName = 'TOPICTEMPLATEID' and GroupKey = v.ForumSettingsKey),0),
	
						  IsNull((SELECT     SettingValue
							FROM          {databaseOwner}{objectQualifier}activeforums_Settings AS {objectQualifier}activeforums_Settings_1
							WHERE      (SettingName = 'ALLOWRSS') AND (GroupKey = v.ForumSettingsKey)),0) AS AllowRSS,
						  IsNull((SELECT     SettingValue
							FROM          {databaseOwner}{objectQualifier}activeforums_Settings AS {objectQualifier}activeforums_Settings_3
							WHERE      (SettingName = 'ALLOWHTML') AND (GroupKey = v.ForumSettingsKey)),0) AS AllowHTML,
						  IsNull((SELECT     SettingValue
							FROM          {databaseOwner}{objectQualifier}activeforums_Settings AS activeforums_Settings_3
							WHERE      (SettingName = 'ALLOWLIKES') AND (GroupKey = v.ForumSettingsKey)),0) AS AllowLikes,
						  IsNull((SELECT     SettingValue
							FROM          {databaseOwner}{objectQualifier}activeforums_Settings AS {objectQualifier}activeforums_Settings_2
							WHERE      (SettingName = 'ALLOWSCRIPT') AND (GroupKey = v.ForumSettingsKey)),0) AS AllowScript,
							IsNull((SELECT     SettingValue
							FROM          {databaseOwner}{objectQualifier}activeforums_Settings
							WHERE      (SettingName = 'ALLOWTAGS') AND (GroupKey = v.ForumSettingsKey)),0) AS AllowTags,
							 FT.TopicId,
						  (SELECT     ISNULL(AVG(Rating), 0) AS Expr1
							FROM          {databaseOwner}{objectQualifier}activeforums_Topics_Ratings
							WHERE      (TopicId = @TopicId)) AS TopicRating,
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.DateCreated,'') ELSE IsNull(R.DateCreated,'') END AS LastPostDate, 
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.AuthorId,'') ELSE IsNull(R.AuthorId,'') END AS LastPostAuthorId, 
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.AuthorName,'') ELSE IsNull(R.AuthorName,'') END AS LastPostAuthorName,
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.UserName,'') ELSE IsNull(R.Username,'') END AS LastPostUserName,
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.FirstName,'') ELSE IsNull(R.FirstName,'') END AS LastPostFirstName, 
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.LastName,'') ELSE IsNull(R.LastName,'') END AS LastPostLastName, 
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.DisplayName,'') ELSE IsNull(R.DisplayName,'') END AS LastPostDisplayName, T.Subject, T.Summary, T.Body, T.AuthorId, T.AuthorName, T.Username, T.FirstName, T.LastName, 
					  T.DisplayName, T.DateCreated, T.DateUpdated, T.ViewCount, @ReplyCount as ReplyCount, T.IsPinned, T.IsLocked, T.StatusId, T.TopicIcon, T.TopicType, @Tags as Tags,ISNULL(t.TopicData,'') as TopicData,
					  {databaseOwner}{objectQualifier}activeforums_Poll.PollID,
					aft.NextTopic, 
					aft.PrevTopic,
					t.URL,
					T.AuthorName as TopicAuthor,
					COALESCE((SELECT COUNT(*)
							  FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions
							  WHERE     (ForumId = @ForumId) AND (TopicId = @TopicId)), 0) AS TopicSubscriberCount,
					COALESCE((SELECT COUNT(*)
							  FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions
							  WHERE     (ForumId = @ForumId) AND (TopicId = 0)), 0) AS ForumSubscriberCount
FROM
	{databaseOwner}{objectQualifier}activeforums_Topics aft INNER JOIN          
	{databaseOwner}{objectQualifier}activeforums_ForumTopics AS FT ON aft.TopicId = FT.TopicId INNER JOIN
					  {databaseOwner}{objectQualifier}vw_activeforums_GroupForum AS v ON FT.ForumId = v.ForumId INNER JOIN
					  {databaseOwner}{objectQualifier}vw_activeforums_ForumTopics AS T ON FT.TopicId = T.TopicId LEFT OUTER JOIN
					  {databaseOwner}{objectQualifier}vw_activeforums_ForumReplies AS R ON FT.LastReplyId = R.ReplyId AND FT.LastReplyId IS NOT NULL LEFT OUTER JOIN
					  {databaseOwner}{objectQualifier}activeforums_Poll ON T.TopicId = {databaseOwner}{objectQualifier}activeforums_Poll.TopicId
WHERE     (v.ForumActive = 1) AND (v.ModuleId = @ModuleId) AND (v.ForumId = @ForumId) AND (FT.TopicId = @TopicId)
END
--Forum Security
BEGIN
	Select p.* from {databaseOwner}{objectQualifier}activeforums_Permissions as p INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as f ON f.PermissionsId = p.PermissionsId WHERE f.ForumId = @ForumId
	
END
--Get Topic and Replies
	SELECT	ForumId, TopicId, ReplyId, [Subject], Summary, AuthorId, StatusId, AuthorName, UserName, FirstName, LastName,
			DisplayName, DateCreated, DateUpdated, Body, TopicCount, ReplyCount, ViewCount, AnswerCount,
			RewardPoints, UserDateCreated, DateLastActivity, UserCaption, [Signature], SignatureDisabled,
			UserPostCount, UserTotalPoints,IPAddress,Avatar,AvatarType,AvatarDisabled,MemberSince,
			ContentId,IsUserOnline,ReplyToId,	UserRoles = {databaseOwner}{objectQualifier}activeforums_UserProfiles_GetUserRoles(AuthorId, @PortalID, GETUTCDATE(),0),
			@Tags as Tags
			
	FROM
			(
			SELECT	T.ForumId, T.TopicId, T.ReplyId, T.Subject, T.Summary, T.AuthorId, T.StatusId, IsNull(T.AuthorName,'anon') as AuthorName, IsNull(T.Username,IsNull(T.AuthorName,'anon')) as Username,
			IsNull(T.FirstName,'') as FirstName, IsNull(T.LastName,'') as LastName,IsNull(T.DisplayName,T.AuthorName) as DisplayName,
			T.DateCreated, T.DateUpdated, C.Body, IsNull(P.TopicCount,0) as TopicCount, IsNull(P.ReplyCount,0) as ReplyCount,
			IsNull(P.ViewCount,0) as ViewCount, IsNull(P.AnswerCount,0) as AnswerCount, IsNull(P.RewardPoints,0) as RewardPoints,
			IsNull(P.DateCreated,'') AS UserDateCreated, IsNull(P.DateLastActivity,'') as DateLastActivity, 
			IsNull(P.UserCaption,'') as UserCaption, IsNull(P.Signature,'') as [Signature], IsNull(P.SignatureDisabled,0) as SignatureDisabled, 
			UserPostCount = (IsNull(P.TopicCount,0) + IsNull(P.ReplyCount,0)), 
			UserTotalPoints = (IsNull(P.TopicCount,0) + IsNull(P.ReplyCount,0) + IsNull(P.AnswerCount,0) + IsNull(P.RewardPoints,0)),
			C.IPAddress, IsNull(P.Avatar,'') as Avatar, IsNull(P.AvatarType,0) as AvatarType, IsNull(P.AvatarDisabled,0) as AvatarDisabled,
			IsNull(P.DateCreated,'') as MemberSince,
			C.ContentId, IsUserOnline = (CASE WHEN DATEDIFF(mi,p.DateLastActivity,GETUTCDATE()) <=1 THEN 1 ELSE 0 END),T.ReplyToId,
			ROW_NUMBER() OVER (Order By 
								CASE
									WHEN @Sort = 'DESC' THEN T.DateCreated END DESC,
								CASE 
									WHEN @Sort = 'ASC' THEN T.DateCreated END ASC
								) as RowRank
			FROM	{databaseOwner}{objectQualifier}vw_activeforums_TopicView AS T INNER JOIN
					{databaseOwner}{objectQualifier}activeforums_Content AS C ON T.ContentId = C.ContentId LEFT OUTER JOIN
					{databaseOwner}{objectQualifier}activeforums_UserProfiles AS P ON C.AuthorId = P.UserId AND P.PortalId = @PortalId AND P.ModuleId = -1
			WHERE     (T.TopicId = @TopicId)
			)
		AS TopicWithRowNumbers
		WHERE RowRank > @RowIndex AND RowRank <= (@RowIndex + @MaxRows)

--Get Attachments
SELECT     A.AttachId, A.ContentId, A.UserID, A.[FileName], A.ContentType, A.FileSize, A.FileID
FROM        {databaseOwner}{objectQualifier}activeforums_Attachments AS A inner join
			{databaseOwner}{objectQualifier}vw_activeforums_TopicView AS T ON A.ContentId = T.ContentId
WHERE     (T.TopicId = @TopicId AND (A.AllowDownload = 1 OR A.AllowDownload IS NULL))

--Update View Count
UPDATE {databaseOwner}{objectQualifier}activeforums_Topics SET ViewCount = (ViewCount+1) WHERE TopicId = @TopicId
If @UserId > 0
BEGIN
SELECT @LastPostId = IsNull(LastReplyId,0) FROM {databaseOwner}{objectQualifier}activeforums_ForumTopics WHERE ForumId = @ForumId AND TopicId = @TopicId
exec {databaseOwner}{objectQualifier}activeforums_Forums_Tracking_UpdateUser @ModuleId, @UserId, @ForumId	
SET @LastPostId = IsNull(@LastPostId,0)
exec {databaseOwner}{objectQualifier}activeforums_Topics_Tracking_UpdateUser @ForumId, @TopicId, @LastPostId, @UserId
exec {databaseOwner}{objectQualifier}activeforums_UserProfiles_UpdateActivity @PortalId, @ModuleId, @UserId
END

GO



/* activeforums_UserProfiles_Opt2  */
IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'{objectQualifier}activeforums_UserProfiles') AND name = N'idx_{objectQualifier}activeforums_UserProfiles_Opt2')
DROP INDEX [idx_{objectQualifier}activeforums_UserProfiles_Opt2] ON {databaseOwner}{objectQualifier}activeforums_UserProfiles 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_UserProfiles_Opt2] ON {databaseOwner}{objectQualifier}activeforums_UserProfiles
(
	[UserId] ASC
)
INCLUDE ( [TopicCount],
[ReplyCount],
[ViewCount],
[AnswerCount],
[RewardPoints],
[UserCaption],
[DateCreated],
[DateLastActivity],
[Signature],
[SignatureDisabled],
[Avatar],
[AvatarType],
[AvatarDisabled]
) WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO


/* activeforums_UserProfiles_Opt3  */
IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'{objectQualifier}activeforums_UserProfiles') AND name = N'idx_{objectQualifier}activeforums_UserProfiles_Opt3')
DROP INDEX [idx_{objectQualifier}activeforums_UserProfiles_Opt3] ON {databaseOwner}{objectQualifier}activeforums_UserProfiles 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_UserProfiles_Opt3] ON {databaseOwner}{objectQualifier}activeforums_UserProfiles 
(
	[PortalId] ASC,
	[UserId] ASC
)
INCLUDE ( [ProfileId],
[ModuleId],
[TopicCount],
[ReplyCount],
[ViewCount],
[AnswerCount],
[RewardPoints],
[UserCaption],
[DateCreated],
[DateUpdated],
[DateLastActivity],
[Signature],
[SignatureDisabled],
[TrustLevel],
[AdminWatch],
[AttachDisabled],
[Avatar],
[AvatarType],
[AvatarDisabled],
[PrefDefaultSort],
[PrefDefaultShowReplies],
[PrefJumpLastPost],
[PrefTopicSubscribe],
[PrefSubscriptionType],
[PrefEmailFormat],
[PrefBlockAvatars],
[PrefBlockSignatures],
[PrefPageSize],
[DateLastPost]) WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO

/* activeforums_UserProfiles -- remove columns no longer used */

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_{objectQualifier}activeforums_UserProfiles_PrefUseAjax]') AND type = 'D')
ALTER TABLE {databaseOwner}{objectQualifier}activeforums_UserProfiles DROP CONSTRAINT DF_{objectQualifier}activeforums_UserProfiles_PrefUseAjax
GO 
IF EXISTS(SELECT * FROM sys.columns WHERE [name] = N'PrefUseAjax' AND [object_id] = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles]'))
ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] DROP COLUMN PrefUseAjax
GO 
IF EXISTS(SELECT * FROM sys.columns WHERE [name] = N'AOL' AND [object_id] = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles]'))
ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] DROP COLUMN AOL
GO
IF EXISTS(SELECT * FROM sys.columns WHERE [name] = N'ICQ' AND [object_id] = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles]'))
ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] DROP COLUMN ICQ
GO
IF EXISTS(SELECT * FROM sys.columns WHERE [name] = N'MSN' AND [object_id] = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles]'))
ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] DROP COLUMN MSN
GO
IF EXISTS(SELECT * FROM sys.columns WHERE [name] = N'Yahoo' AND [object_id] = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles]'))
ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] DROP COLUMN Yahoo
GO
IF EXISTS(SELECT * FROM sys.columns WHERE [name] = N'Occupation' AND [object_id] = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles]'))
ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] DROP COLUMN Occupation
GO
IF EXISTS(SELECT * FROM sys.columns WHERE [name] = N'Location' AND [object_id] = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles]'))
ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] DROP COLUMN Location
GO
IF EXISTS(SELECT * FROM sys.columns WHERE [name] = N'Interests' AND [object_id] = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles]'))
ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] DROP COLUMN Interests
GO
IF EXISTS(SELECT * FROM sys.columns WHERE [name] = N'WebSite' AND [object_id] = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles]'))
ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] DROP COLUMN WebSite
GO
IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[DF_{objectQualifier}activeforums_UserProfiles_Bio]') AND type = 'D')
ALTER TABLE {databaseOwner}{objectQualifier}activeforums_UserProfiles DROP CONSTRAINT DF_{objectQualifier}activeforums_UserProfiles_Bio
GO 
IF EXISTS(SELECT * FROM sys.columns WHERE [name] = N'Bio' AND [object_id] = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles]'))
ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] DROP COLUMN Bio
GO
IF EXISTS(SELECT * FROM sys.columns WHERE [name] = N'Badges' AND [object_id] = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles]'))
ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_UserProfiles] DROP COLUMN Badges
GO

EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}activeforums_DashBoard_Stats]';
GO
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}activeforums_Replies_UpdateStatus]';
GO
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}activeforums_Topics_UpdateStatus]';
GO
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}activeforums_TopicsList]';
GO
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}activeforums_UI_TopMembers]';
GO
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles_Create]';
GO
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles_GetUsersOnline]';
GO
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles_Stats]';
GO
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles_UpdateActivity]';
GO
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}activeforums_UI_TopicsView]';
GO
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}activeforums_UI_TopicsDisplay]';
GO


/* issue 761 end : remove unneeded user preferences */

/* --------------------- */



/* issue 976 begin : add index for last activity for users online */

/* --------------------- */


/* activeforums_UserProfiles_Opt4  */
IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'{objectQualifier}activeforums_UserProfiles') AND name = N'idx_{objectQualifier}activeforums_UserProfiles_Opt4')
DROP INDEX [idx_{objectQualifier}activeforums_UserProfiles_Opt4] ON {databaseOwner}{objectQualifier}activeforums_UserProfiles 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_UserProfiles_Opt4] ON {databaseOwner}{objectQualifier}activeforums_UserProfiles
(
	[PortalId] ASC,
	[DateLastActivity] DESC,
	[UserId] ASC
)
WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO


/* issue 976 End :  add index for last activity for users online */

/* --------------------- */
