SET NOCOUNT ON 
GO

/* issues 1184 - begin - convert NTEXT to NVARCHAR(MAX)  */

DECLARE @FullTextEnabled INT

/*
    This script is used to convert NTEXT columns to NVARCHAR(MAX) in the activeforums_Content, activeforums_EmailNotificationQueue, and activeforums_Templates tables.
    (even though we are removing activeforums_Templates, it is included for completeness... )
    It also drops and re-adds full text indexes if they are enabled on those columns.
*/

IF EXISTS (SELECT * FROM sys.columns WHERE system_type_id = 99 and object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Content]') AND name = 'Body')
BEGIN
    PRINT 'Updating activeforums_Content.Body from NTEXT to NVARCHAR(MAX)'
    
    SELECT @FullTextEnabled = COLUMNPROPERTY(OBJECT_ID('{databaseOwner}[{objectQualifier}activeforums_Content]'), 'Body', 'IsFulltextIndexed')
    IF @FullTextEnabled = 1
    BEGIN
        PRINT 'Dropping Full Text Index on activeforums_Content.Body'
        EXEC sp_fulltext_column      
        @tabname =  '{databaseOwner}[{objectQualifier}[activeforums_Content]' , 
        @colname =  'Body' , 
        @action =  'drop' 
    END
    ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_Content] ALTER COLUMN Body NVARCHAR(MAX) NULL

    /* this step moves the data internally from the old NTEXT column to the new NVARCHAR(MAX) column */
    UPDATE {databaseOwner}[{objectQualifier}activeforums_Content] SET Body = Body
    
    IF @FullTextEnabled = 1
    BEGIN
        PRINT 'Adding Full Text Index on activeforums_Content.Body'
        EXEC sp_fulltext_column      
        @tabname =  '{databaseOwner}[{objectQualifier}[activeforums_Content]' , 
        @colname =  'Body' , 
        @action =  'add' 
    END
END

IF EXISTS (SELECT * FROM sys.columns WHERE system_type_id = 99 and object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_EmailNotificationQueue]') AND name = 'EmailBody')
BEGIN
    PRINT 'Updating activeforums_EmailNotificationQueue.EmailBody from NTEXT to NVARCHAR(MAX)'
    
    SELECT @FullTextEnabled = COLUMNPROPERTY(OBJECT_ID('{databaseOwner}[{objectQualifier}activeforums_EmailNotificationQueue]'), 'EmailBody', 'IsFulltextIndexed')
    IF @FullTextEnabled = 1
    BEGIN
        PRINT 'Dropping Full Text Index on activeforums_EmailNotificationQueue.EmailBody'
        EXEC sp_fulltext_column      
        @tabname =  '{databaseOwner}[{objectQualifier}[activeforums_Content]' , 
        @colname =  'EmailBody' , 
        @action =  'drop' 
    END
    ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_EmailNotificationQueue] ALTER COLUMN EmailBody NVARCHAR(MAX) NULL
    
    /* this step moves the data internally from the old NTEXT column to the new NVARCHAR(MAX) column */
    UPDATE {databaseOwner}[{objectQualifier}activeforums_EmailNotificationQueue] SET EmailBody = EmailBody
    
    IF @FullTextEnabled = 1
    BEGIN
        PRINT 'Adding Full Text Index on activeforums_EmailNotificationQueue.EmailBody'
        EXEC sp_fulltext_column      
        @tabname =  '{databaseOwner}[{objectQualifier}[activeforums_EmailNotificationQueue]' , 
        @colname =  'EmailBody' , 
        @action =  'add' 
    END
END

IF EXISTS (SELECT * FROM sys.columns WHERE system_type_id = 99 and object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Templates]') AND name = 'Template')
BEGIN
    PRINT 'Updating activeforums_Templates.EmailBody from NTEXT to NVARCHAR(MAX)'
    
    SELECT @FullTextEnabled = COLUMNPROPERTY(OBJECT_ID('{databaseOwner}[{objectQualifier}activeforums_Templates]'), 'Template', 'IsFulltextIndexed')
    IF @FullTextEnabled = 1
    BEGIN
        PRINT 'Dropping Full Text Index on activeforums_Templates.Template'
        EXEC sp_fulltext_column      
        @tabname =  '{databaseOwner}[{objectQualifier}[activeforums_Content]' , 
        @colname =  'Template' , 
        @action =  'drop' 
    END
    ALTER TABLE {databaseOwner}[{objectQualifier}activeforums_Templates] ALTER COLUMN Template NVARCHAR(MAX) NULL
    
    /* this step moves the data internally from the old NTEXT column to the new NVARCHAR(MAX) column */
    UPDATE {databaseOwner}[{objectQualifier}activeforums_Templates] SET Template = Template
    
    IF @FullTextEnabled = 1
    BEGIN
        PRINT 'Adding Full Text Index on activeforums_Templates.Template'
        EXEC sp_fulltext_column      
        @tabname =  '{databaseOwner}[{objectQualifier}[activeforums_Templates]' , 
        @colname =  'Template' , 
        @action =  'add' 
    END
END 


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}vw_activeforums_Topics]') AND type in (N'V', N'VW'))
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}vw_activeforums_Topics]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}vw_activeforums_Replies]') AND type in (N'V', N'VW'))
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}vw_activeforums_Replies]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}vw_activeforums_ForumTopics]') AND type in (N'V', N'VW'))
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}vw_activeforums_ForumTopics]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}vw_activeforums_ForumReplies]') AND type in (N'V', N'VW'))
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}vw_activeforums_ForumReplies]';
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}vw_activeforums_TopicsView]') AND type in (N'V', N'VW'))
EXECUTE sp_refreshsqlmodule N'{databaseOwner}[{objectQualifier}vw_activeforums_TopicsView]';
GO



/* begin: activeforums_Topics_Save */
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Topics_Save]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Topics_Save]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Topics_Save]
@PortalId int,
@TopicId int,
@ViewCount int,
@ReplyCount int,
@IsLocked bit,
@IsPinned bit,
@TopicIcon nvarchar(25),
@StatusId int,
@IsApproved bit,
@IsDeleted bit,
@IsAnnounce bit,
@IsArchived bit,
@AnnounceStart datetime,
@AnnounceEnd datetime,
@Subject nvarchar(255),
@Body nvarchar(max),
@Summary nvarchar(1000),
@DateCreated datetime,
@DateUpdated datetime,
@AuthorId int,
@AuthorName nvarchar(150),
@IPAddress nvarchar(50),
@TopicType int,
@Priority int,
@URL nvarchar(1000),
@TopicData nvarchar(max)
AS
DECLARE @ContentId int
DECLARE @ForumId int
DECLARE @ForumGroupId int
DECLARE @ModuleId int
SET @ForumId = -1
SET @ModuleId = -1
DECLARE @ApprovedStatus bit
SET @ApprovedStatus = @IsApproved
DECLARE @currURL nvarchar(1000)
IF @URL <> '' AND @TopicId>0
BEGIN
	SET @ForumId = (SELECT ForumId FROM {databaseOwner}{objectQualifier}activeforums_ForumTopics WHERE TopicId = @TopicId)
	SET @ModuleId = (SELECT ModuleId FROM {databaseOwner}{objectQualifier}activeforums_Forums WHERE ForumId= @ForumId)
	SET @ForumGroupId = (SELECT ForumGroupId FROM {databaseOwner}{objectQualifier}activeforums_Forums WHERE ForumId= @ForumId)
	SET @currURL = {databaseOwner}{objectQualifier}fn_activeforums_GetURL(@ModuleId,@ForumGroupId,@ForumId,@TopicId,-1,-1)
	IF @currURL <> ''
		BEGIN
			DECLARE @newURL nvarchar(1000)
			SET @newURL = {databaseOwner}{objectQualifier}fn_activeforums_GetURL(@ModuleID,@ForumGroupId, @ForumId,-1,-1,-1) + @URL + '/'
			IF LTRIM(RTRIM(LOWER(@newURL))) <> LTRIM(RTRIM(LOWER(@currURL))) 
				BEGIN
					exec {databaseOwner}{objectQualifier}activeforums_URL_Archive @PortalId,@ForumGroupId, @ForumId, @TopicId, @currURL
				END
		END
END
IF EXISTS(SELECT ContentId FROM {databaseOwner}{objectQualifier}activeforums_Topics WHERE TopicId = @TopicId)
BEGIN
	SELECT @ApprovedStatus = IsApproved, @ContentId = ContentId FROM {databaseOwner}{objectQualifier}activeforums_Topics WHERE TopicId = @TopicId

	BEGIN
		UPDATE {databaseOwner}{objectQualifier}activeforums_Content
			SET Subject = @Subject,
				Body = @Body,
				Summary = @Summary,
				DateCreated = @DateCreated,
				DateUpdated = @DateUpdated,
				AuthorId = @AuthorId,
				AuthorName = @AuthorName,
				IsDeleted = @IsDeleted
			WHERE ContentId = @ContentId
		UPDATE {databaseOwner}{objectQualifier}activeforums_Topics
			SET ViewCount = @ViewCount,
				ReplyCount = @ReplyCount,
				IsLocked = @IsLocked,
				IsPinned = @IsPinned,
				TopicIcon = @TopicIcon,
				StatusId = @StatusId,
				IsApproved = @IsApproved,
				IsDeleted = @IsDeleted,
				IsAnnounce = @IsAnnounce,
				IsArchived = @IsArchived,
				AnnounceStart = @AnnounceStart,
				AnnounceEnd = @AnnounceEnd,
				TopicType = @TopicType,
				Priority = @Priority,
				URL = @URL,
				TopicData = @TopicData
			WHERE TopicId = @TopicId	
		IF @IsApproved = 1 And @AuthorId > 0 
		BEGIN
			UPDATE {databaseOwner}{objectQualifier}activeforums_UserProfiles 
				SET DateLastReply = GETUTCDATE()
				WHERE UserId = @AuthorId AND PortalId = @PortalId
		END
	END
END
ELSE

BEGIN
	BEGIN
		INSERT INTO {databaseOwner}{objectQualifier}activeforums_Content
			(Subject, Body, Summary, DateCreated, DateUpdated, AuthorId, AuthorName, IsDeleted, IPAddress)
			VALUES
			(@Subject, @Body, @Summary, @DateCreated, @DateUpdated, @AuthorId, @AuthorName, @IsDeleted, @IPAddress)
		SET @ContentId = SCOPE_IDENTITY()
	END
	BEGIN
		INSERT INTO {databaseOwner}{objectQualifier}activeforums_Topics
			(ContentId, ViewCount, ReplyCount, IsLocked, IsPinned, TopicIcon, StatusId, IsApproved, IsDeleted, IsAnnounce, IsArchived, TopicType, AnnounceStart, AnnounceEnd, Priority, URL, TopicData)
			VALUES
			(@ContentId, @ViewCount, @ReplyCount, @IsLocked, @IsPinned, @TopicIcon, @StatusId, @IsApproved, @IsDeleted, @IsAnnounce, @IsArchived, @TopicType, @AnnounceStart, @AnnounceEnd, @Priority, @URL, @TopicData)
		SET @TopicId = SCOPE_IDENTITY()

	END
	IF @IsApproved = 1 And @AuthorId > 0 
		BEGIN
			UPDATE {databaseOwner}{objectQualifier}activeforums_UserProfiles 
				SET DateLastPost = GETUTCDATE()
				WHERE UserId = @AuthorId AND PortalId = @PortalId
		END
END
SELECT @TopicId

GO

/* end : activeforums_Topics_Save */


/* begin: activeforums_Reply_Save */

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Reply_Save]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Reply_Save]
GO
 
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Reply_Save]
@PortalId int,
@TopicId int,
@ReplyId int,
@ReplyToId int,
@StatusId int,
@IsApproved bit,
@IsDeleted bit,
@Subject nvarchar(255),
@Body nvarchar(max),
@DateCreated datetime,
@DateUpdated datetime,
@AuthorId int,
@AuthorName nvarchar(150),
@IPAddress nvarchar(50)
AS
DECLARE @ContentId int
DECLARE @IsEdit bit
SET @IsEdit = 0
DECLARE @ApprovedStatus bit
SET @ApprovedStatus = @IsApproved

-- This part is a work around for Quick Reply feature not working for Tapatalk STARTS

DECLARE @TopicSubject NVARCHAR(255) =	(
											SELECT top 1 afc.Subject FROM {databaseOwner}[{objectQualifier}activeforums_Topics] aft
												JOIN {databaseOwner}[{objectQualifier}activeforums_Content] afc ON aft.ContentId = afc.ContentId
											WHERE TopicId = @TopicId
										)	
										
SET @Subject = ISNULL(NULLIF(@Subject, ''), 'RE: ' + @TopicSubject)	

IF (@Subject NOT LIKE 'RE:%')
BEGIN
	SET @Subject = 'RE: ' + @Subject
END
-- This part is a work around for Quick Reply feature not working for Tapatalk ENDS


IF EXISTS(SELECT ContentId FROM {databaseOwner}{objectQualifier}activeforums_Replies WHERE ReplyId = @ReplyId)
	BEGIN
		SELECT @ContentId = ContentId, @ApprovedStatus = IsApproved FROM {databaseOwner}{objectQualifier}activeforums_Replies WHERE ReplyId = @ReplyId
		
		BEGIN
			SET @IsEdit = 1
			UPDATE {databaseOwner}{objectQualifier}activeforums_Content
				SET Subject = @Subject,
					Body = @Body,
					DateCreated = @DateCreated,
					DateUpdated = @DateUpdated,
					AuthorId = @AuthorId,
					AuthorName = @AuthorName,
					IsDeleted = @IsDeleted,
					IPAddress = @IPAddress
				WHERE ContentId = @ContentId
			UPDATE {databaseOwner}{objectQualifier}activeforums_Replies
				SET StatusId = @StatusId,
					TopicId = @TopicId,
					IsApproved = @IsApproved,
					IsDeleted = @IsDeleted,
					ReplyToId = @ReplyToId					
				WHERE ReplyId = @ReplyId	
		END
	END
ELSE
--INSERT
BEGIN
	BEGIN
		INSERT INTO {databaseOwner}{objectQualifier}activeforums_Content
			(Subject, Body, DateCreated, DateUpdated, AuthorId, AuthorName, IsDeleted, IPAddress)
			VALUES
			(@Subject, @Body, @DateCreated, @DateUpdated, @AuthorId, @AuthorName, @IsDeleted, @IPAddress)
		SET @ContentId = SCOPE_IDENTITY()
	END
	BEGIN
		INSERT INTO {databaseOwner}{objectQualifier}activeforums_Replies
			(ContentId, TopicId, StatusId, IsApproved, IsDeleted, ReplyToId)
			VALUES
			(@ContentId, @TopicId, @StatusId, @IsApproved, @IsDeleted, @ReplyToId)
		SET @ReplyId = SCOPE_IDENTITY()
		
	END
	

END
IF @IsApproved = 1
	BEGIN
		DECLARE @ForumId int
		SELECT @ForumId = ForumId FROM {databaseOwner}{objectQualifier}activeforums_ForumTopics WHERE TopicId = @TopicId
		DECLARE @TotalReplies int
		SET @TotalReplies = (SELECT Count(ReplyId) from {databaseOwner}{objectQualifier}activeforums_replies as r inner join {databaseOwner}{objectQualifier}activeforums_topics as t on t.topicid = r.topicid and r.isapproved = 1 and r.isdeleted = 0 INNER JOIN {databaseOwner}{objectQualifier}activeforums_forumtopics as ft on t.topicid = ft.topicid WHERE ft.forumid = @ForumId)
		UPDATE {databaseOwner}{objectQualifier}activeforums_Forums 
		SET LastPostSubject = @Subject, LastPostAuthorName = @AuthorName, LastPostAuthorId = IsNull(@AuthorId,-1), 
			LastPostDate = @DateCreated, LastTopicId = IsNull(@TopicId,0), LastReplyId = IsNull(@ReplyId,0),
			TotalReplies = ISNULL(@TotalReplies,0)
		WHERE ForumId = @ForumId
		UPDATE {databaseOwner}{objectQualifier}activeforums_Topics
			SET ReplyCount = (Select Count(ReplyId) from {databaseOwner}{objectQualifier}activeforums_Replies WHERE TopicId = @TopicId AND IsDeleted = 0 AND IsApproved = 1)
			WHERE TopicId = @TopicId
		IF @AuthorId > 0
			UPDATE {databaseOwner}{objectQualifier}activeforums_UserProfiles 
				SET ReplyCount = ISNULL((Select Count(ReplyId) from {databaseOwner}{objectQualifier}activeforums_Replies as r INNER JOIN 
						{databaseOwner}{objectQualifier}activeforums_Content as c ON r.ContentId = c.ContentId AND c.AuthorId=@AuthorId INNER JOIN
						{databaseOwner}{objectQualifier}activeforums_ForumTopics as ft ON ft.TopicId = r.TopicId INNER JOIN
						{databaseOwner}{objectQualifier}activeforums_Forums as f ON ft.ForumId = f.ForumId
						WHERE r.IsApproved = 1 AND r.IsDeleted=0 AND f.PortalId=@PortalId),0)
				WHERE UserId = @AuthorId AND PortalId = @PortalId						
		
	END


/* populate ModuleId in activeforums_Content */
UPDATE c
SET c.ModuleId = f.ModuleId
FROM {databaseOwner}[{objectQualifier}activeforums_Content] c 
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}activeforums_Replies] r
ON r.ContentId = c.ContentId 
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}activeforums_ForumTopics] ft 
ON ft.TopicId = r.TopicId
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}activeforums_Forums] f 
ON f.ForumId = ft.ForumId
WHERE c.ModuleId IS NULL AND r.ReplyId = @ReplyId


SELECT @ReplyId
GO
/* end: activeforums_Reply_Save */


/* begin: activeforums_Templates_Save*/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Templates_Save]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Templates_Save]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Templates_Save]
	@TemplateId int,
	@PortalId int,
	@ModuleId int,
	@TemplateType int,
	@IsSystem bit,
	@Title nvarchar(150),
	@Subject nvarchar(200),
	@Template nvarchar(max)	
AS
BEGIN
IF EXISTS (Select TemplateId FROM {databaseOwner}{objectQualifier}activeforums_Templates WHERE TemplateId = @TemplateID AND PortalId = @PortalId AND ModuleId = @ModuleID) 
	--UPDATE
	BEGIN
		UPDATE {databaseOwner}{objectQualifier}activeforums_Templates
			SET
				TemplateType = @TemplateType,
				IsSystem = @IsSystem,
				Title = @Title,
				Subject = @Subject,
				Template = @Template,
				DateUpdated = GETUTCDATE()
			WHERE
				TemplateId = @TemplateId AND PortalId = @PortalId AND ModuleId = @ModuleId
	END
ELSE
	--INSERT
	BEGIN
		INSERT INTO {databaseOwner}{objectQualifier}activeforums_Templates
			(PortalId, ModuleId, TemplateType, Title, Subject, Template, DateCreated)
			VALUES
			(@PortalId, @ModuleId, @TemplateType,@Title,@Subject,@Template, GETUTCDATE())
		SET @TemplateId = SCOPE_IDENTITY()
		DECLARE @TemplateTitleCount int
		SET @TemplateTitleCount = (SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}activeforums_Templates WHERE Title = @Title AND ModuleId = @ModuleId) 
		IF @TemplateTitleCount <> 1 
			BEGIN
				UPDATE {databaseOwner}{objectQualifier}activeforums_Templates SET FileName = CONCAT(RTRIM(Title),'-',LTRIM(STR(TemplateId)),'.ascx') WHERE TemplateId = @TemplateId AND FileName IS NULL
			END
			ELSE
				BEGIN
					UPDATE {databaseOwner}{objectQualifier}activeforums_Templates SET FileName = CONCAT(RTRIM(Title),'.ascx') WHERE TemplateId = @TemplateId AND FileName IS NULL
				END 
	END
END

SELECT @TemplateId
GO
/* end: activeforums_Templates_Save*/


/* issues 1184 - end - convert NTEXT to NVARCHAR(MAX)  */